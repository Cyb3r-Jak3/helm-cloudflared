metrics: # @schema required:false ; type:object
  enabled: true # @schema type:boolean ; default: true ; description: Enable Prometheus metrics
  port: 2000 # @schema type:integer ; default: 2000 ; description: Port to expose Prometheus metrics on

# This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
replicaCount: 2 # @schema type:integer ; default: 2

cloudflare:
  tunnel_token: "" # @schema type:string ; default: "" ; description: The tunnel token for Cloudflare
  existingSecret: "" # @schema type:string ; default: "" ; description: The name of an existing secret to use for the tunnel token
  existingSecretKey: "" # @schema type:string ; default: "" ; description: The key in the existing secret to use for the tunnel token
  extraArgs: [] # @schema type:array ; default: [] ; description: Extra arguments to pass to cloudflared


# This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  registry: docker.io # @schema type:string ; default: docker.io
  repository: cloudflare/cloudflared # @schema type:string ; default: cloudflare/cloudflared
  # This sets the pull policy for images.
  pullPolicy: IfNotPresent # @schema type:string ; default: IfNotPresent ; description: The image pull policy to use. Defaults to IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "" # @schema description: The image tag to pull. Defaults to app version ; type:string ; default: ""

# This is for the secretes for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
# This is to override the chart name.
nameOverride: ""
fullnameOverride: ""

#This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# This is for setting Kubernetes Annotations to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/ 
podAnnotations: {}
# This is for setting Kubernetes Labels to a Pod.
# For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext:
  fsGroup: 2000

securityContext:
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000

resources: {}

# This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
livenessProbe:
  httpGet:
    path: /ready
    port: http-metrics

#This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80

# Additional volumes on the output Deployment definition.
volumes: []

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []

nodeSelector: {}

tolerations: []

affinity: {}
